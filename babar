#!/bin/zsh

# We need:
#   + torrent?
#   + sound
#     - pulseaudio master volume
#     - muted?
#     - headphones?
#   + disks, (used/total)
#     - ~
#     - /
#   + CPU (all cores)
#     - load
#     - frequency
#    + RAM
#      - used/total
#      - load
#   + network
#      - IP
#      - DHCP?
#      - ESSID (if wifi)
#      - rate quality (if wifi)
#   + power
#      - battery remaining if present
#   + date

# unicode symbols
local black='▰'
local white='▱'
local power_sign="\uf0e7"

# system constants
local home_disk=/dev/sda1
local root_disk=/dev/sdb1

brightness_mod() {
  brightness=`xbacklight | xargs printf "%.0f"`

  echo '{ "full_text": " \u2600 '$brightness'% ", "color": "#458588" },'
}

sound_mod() {
  volume=`pamixer --get-volume`
  muted=`pamixer --get-mute`

  if [[ $muted == "true" ]]
  then
    icon="\uf026"
    echo '{ "full_text": " '$icon $volume' ", "color": "#7C6F64" },'
  else
    if (( "$volume" <= "50" ))
    then
      icon="\uf027"
    else
      icon="\uf028"
    fi

    echo '{ "full_text": " '$icon $volume' ", "color": "#B8BB26" },'
  fi

}

disk_mod() {
  test -e $2 || return;

  line=`df -h --output=used,size $2 | tail -n1 | tr -s ' '`
  used=`echo $line | cut -d' ' -f2`
  total=`echo $line | cut -d' ' -f3`

  echo '{ "full_text": " '$1 $used/$total' ", "color": "'$3'" },'
}

root_disk_mod() {
  line=`df -h --output=used,size $root_disk | tail -n1 | tr -s ' '`
  used=`echo $line | cut -d' ' -f2`
  total=`echo $line | cut -d' ' -f3`

  echo '{ "full_text": " \u2302 '$used/$total' ", "color": "#83A598" },'
}

ram_mod() {
  ram_line=`free -m | head -n2 | tail -n1`
  total=`echo $ram_line | head -n1 | tr -s ' ' | cut -d' ' -f2`
  used=`echo $ram_line | tail -n1 | tr -s ' ' | cut -d' ' -f3`
  frac=$((1.0 * used / total))

  if (( $frac < 0.1 ))
  then
    echo '{ "full_text": " '$white$white$white$white$white$white$white$white$white$white $used/$total' ", "color": "#83A598" },'
  elif (( $frac < 0.2 ))
  then
    echo '{ "full_text": " '$black$white$white$white$white$white$white$white$white$white $used/$total' ", "color": "#83A598" },'
  elif (( $frac < 0.3 ))
  then
    echo '{ "full_text": " '$black$black$white$white$white$white$white$white$white$white $used/$total' ", "color": "#B8BB26" },'
  elif (( $frac < 0.4 ))
  then
    echo '{ "full_text": " '$black$black$black$white$white$white$white$white$white$white $used/$total' ", "color": "#B8BB26" },'
  elif (( $frac < 0.5 ))
  then
    echo '{ "full_text": " '$black$black$black$black$white$white$white$white$white$white $used/$total' ", "color": "#B8BB26" },'
  elif (( $frac < 0.6 ))
  then
    echo '{ "full_text": " '$black$black$black$black$black$black$white$white$white$white $used/$total' ", "color": "#FABD2F" },'
  elif (( $frac < 0.7 ))
  then
    echo '{ "full_text": " '$black$black$black$black$black$black$black$white$white$white $used/$total' ", "color": "#FABD2F" },'
  elif (( $frac < 0.8 ))
  then
    echo '{ "full_text": " '$black$black$black$black$black$black$black$black$white$white $used/$total' ", "color": "#FE8019" },'
  elif (( $frac < 0.9 ))
  then
    echo '{ "full_text": " '$black$black$black$black$black$black$black$black$black$white $used/$total' ", "color": "#FE8019" },'
  else
    echo '{ "full_text": " '$black$black$black$black$black$black$black$black$black$black $used/$total' ", "color": "#FB4934" },'
  fi
}

local_ip_mod() {
  local_ip=`ip -o addr show | grep -v ": lo" | grep "inet " | head -n1 | tr -s ' ' | cut -d' ' -f4`

  echo '{ "full_text": " \u23DA '$local_ip' ", "color": "#689D6A" },'
}

power_mod() {
  adp=`cat /sys/class/power_supply/ADP1/online 2> /dev/null` || return
  battery_present=`cat /sys/class/power_supply/BAT1/present 2> /dev/null` || return
  capacity=`cat /sys/class/power_supply/BAT1/capacity 2> /dev/null` || return

  if [[ $adp == "0" ]]
  then
    battery_mod $capacity
  elif [[ $battery_present == "1" ]]
  then
    s=`cat /sys/class/power_supply/BAT1/status`
    echo '{ "full_text": " '$power_sign $s $capacity'% ", "color": "#B8BB26" },'
  fi
}

battery_mod() {
  capacity=$1

  if [[ capacity -lt 8 ]]
  then
    color='#CC241D'
    level=$white$white$white$white$white
  elif [[ capacity -lt 20 ]]
  then
    color='#FB4934'
    level=$black$white$white$white$white
  elif [[ capacity -lt 40 ]]
  then
    color='#D65D0E'
    level=$black$black$white$white$white
  elif [[ capacity -lt 60 ]]
  then
    color='#FABD2F'
    level=$black$black$black$white$white
  elif [[ capacity -lt 80 ]]
  then
    color='#8EC07C'
    level=$black$black$black$black$white
  else
    color='#B8BB26'
    level=$black$black$black$black$black
  fi

  echo '{ "full_text": " '$power_sign $level $capacity'% ", "color": "'$color'" },'
}

date_mod() {
  d=`date +'%a %b %d'`
  echo '{ "full_text": " '$d' ", "color": "#83A598" },'

}

time_mod () {
  d=`date +'%H:%M:%S'`
  minutes=`date +"%M"`

  if [[ minutes -lt 15 ]]
  then
    sign="\u25F7"
  elif [[ minutes -lt 30 ]]
  then
    sign="\u25F6"
  elif [[ minutes -lt 45 ]]
  then
    sign="\u25F5"
  else
    sign="\u25F4"
  fi

  echo '{ "full_text": " '$sign $d'", "color": "#D3869B" }'
}

echo '{ "version": 1 }'
echo '['

while true; do
  a=(
    `echo '['
    brightness_mod
    sound_mod
    disk_mod "\uf015" $home_disk "#FB4934"
    disk_mod "\uf06c" $root_disk "#83A598"
    ram_mod
    local_ip_mod
    power_mod
    date_mod
    time_mod
    echo '],'`
    )

  echo $a
  sleep 1
done
